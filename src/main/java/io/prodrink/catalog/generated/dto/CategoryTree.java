// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: catalog/dto.proto

package io.prodrink.catalog.generated.dto;

/**
 * Protobuf type {@code catalog.CategoryTree}
 */
public  final class CategoryTree extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:catalog.CategoryTree)
    CategoryTreeOrBuilder {
  // Use CategoryTree.newBuilder() to construct.
  private CategoryTree(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CategoryTree() {
    topCategoryNodes_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private CategoryTree(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              topCategoryNodes_ = new java.util.ArrayList<io.prodrink.catalog.generated.dto.CategoryNode>();
              mutable_bitField0_ |= 0x00000001;
            }
            topCategoryNodes_.add(
                input.readMessage(io.prodrink.catalog.generated.dto.CategoryNode.parser(), extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        topCategoryNodes_ = java.util.Collections.unmodifiableList(topCategoryNodes_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.prodrink.catalog.generated.dto.DrinkDtoOuter.internal_static_catalog_CategoryTree_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.prodrink.catalog.generated.dto.DrinkDtoOuter.internal_static_catalog_CategoryTree_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.prodrink.catalog.generated.dto.CategoryTree.class, io.prodrink.catalog.generated.dto.CategoryTree.Builder.class);
  }

  public static final int TOP_CATEGORY_NODES_FIELD_NUMBER = 1;
  private java.util.List<io.prodrink.catalog.generated.dto.CategoryNode> topCategoryNodes_;
  /**
   * <code>repeated .catalog.CategoryNode top_category_nodes = 1;</code>
   */
  public java.util.List<io.prodrink.catalog.generated.dto.CategoryNode> getTopCategoryNodesList() {
    return topCategoryNodes_;
  }
  /**
   * <code>repeated .catalog.CategoryNode top_category_nodes = 1;</code>
   */
  public java.util.List<? extends io.prodrink.catalog.generated.dto.CategoryNodeOrBuilder> 
      getTopCategoryNodesOrBuilderList() {
    return topCategoryNodes_;
  }
  /**
   * <code>repeated .catalog.CategoryNode top_category_nodes = 1;</code>
   */
  public int getTopCategoryNodesCount() {
    return topCategoryNodes_.size();
  }
  /**
   * <code>repeated .catalog.CategoryNode top_category_nodes = 1;</code>
   */
  public io.prodrink.catalog.generated.dto.CategoryNode getTopCategoryNodes(int index) {
    return topCategoryNodes_.get(index);
  }
  /**
   * <code>repeated .catalog.CategoryNode top_category_nodes = 1;</code>
   */
  public io.prodrink.catalog.generated.dto.CategoryNodeOrBuilder getTopCategoryNodesOrBuilder(
      int index) {
    return topCategoryNodes_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < topCategoryNodes_.size(); i++) {
      output.writeMessage(1, topCategoryNodes_.get(i));
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < topCategoryNodes_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, topCategoryNodes_.get(i));
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.prodrink.catalog.generated.dto.CategoryTree)) {
      return super.equals(obj);
    }
    io.prodrink.catalog.generated.dto.CategoryTree other = (io.prodrink.catalog.generated.dto.CategoryTree) obj;

    boolean result = true;
    result = result && getTopCategoryNodesList()
        .equals(other.getTopCategoryNodesList());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getTopCategoryNodesCount() > 0) {
      hash = (37 * hash) + TOP_CATEGORY_NODES_FIELD_NUMBER;
      hash = (53 * hash) + getTopCategoryNodesList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.prodrink.catalog.generated.dto.CategoryTree parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.prodrink.catalog.generated.dto.CategoryTree parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.prodrink.catalog.generated.dto.CategoryTree parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.prodrink.catalog.generated.dto.CategoryTree parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.prodrink.catalog.generated.dto.CategoryTree parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.prodrink.catalog.generated.dto.CategoryTree parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.prodrink.catalog.generated.dto.CategoryTree parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.prodrink.catalog.generated.dto.CategoryTree parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.prodrink.catalog.generated.dto.CategoryTree parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.prodrink.catalog.generated.dto.CategoryTree parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.prodrink.catalog.generated.dto.CategoryTree parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.prodrink.catalog.generated.dto.CategoryTree parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.prodrink.catalog.generated.dto.CategoryTree prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code catalog.CategoryTree}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:catalog.CategoryTree)
      io.prodrink.catalog.generated.dto.CategoryTreeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.prodrink.catalog.generated.dto.DrinkDtoOuter.internal_static_catalog_CategoryTree_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.prodrink.catalog.generated.dto.DrinkDtoOuter.internal_static_catalog_CategoryTree_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.prodrink.catalog.generated.dto.CategoryTree.class, io.prodrink.catalog.generated.dto.CategoryTree.Builder.class);
    }

    // Construct using io.prodrink.catalog.generated.dto.CategoryTree.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getTopCategoryNodesFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      if (topCategoryNodesBuilder_ == null) {
        topCategoryNodes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        topCategoryNodesBuilder_.clear();
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.prodrink.catalog.generated.dto.DrinkDtoOuter.internal_static_catalog_CategoryTree_descriptor;
    }

    public io.prodrink.catalog.generated.dto.CategoryTree getDefaultInstanceForType() {
      return io.prodrink.catalog.generated.dto.CategoryTree.getDefaultInstance();
    }

    public io.prodrink.catalog.generated.dto.CategoryTree build() {
      io.prodrink.catalog.generated.dto.CategoryTree result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public io.prodrink.catalog.generated.dto.CategoryTree buildPartial() {
      io.prodrink.catalog.generated.dto.CategoryTree result = new io.prodrink.catalog.generated.dto.CategoryTree(this);
      int from_bitField0_ = bitField0_;
      if (topCategoryNodesBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          topCategoryNodes_ = java.util.Collections.unmodifiableList(topCategoryNodes_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.topCategoryNodes_ = topCategoryNodes_;
      } else {
        result.topCategoryNodes_ = topCategoryNodesBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.prodrink.catalog.generated.dto.CategoryTree) {
        return mergeFrom((io.prodrink.catalog.generated.dto.CategoryTree)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.prodrink.catalog.generated.dto.CategoryTree other) {
      if (other == io.prodrink.catalog.generated.dto.CategoryTree.getDefaultInstance()) return this;
      if (topCategoryNodesBuilder_ == null) {
        if (!other.topCategoryNodes_.isEmpty()) {
          if (topCategoryNodes_.isEmpty()) {
            topCategoryNodes_ = other.topCategoryNodes_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTopCategoryNodesIsMutable();
            topCategoryNodes_.addAll(other.topCategoryNodes_);
          }
          onChanged();
        }
      } else {
        if (!other.topCategoryNodes_.isEmpty()) {
          if (topCategoryNodesBuilder_.isEmpty()) {
            topCategoryNodesBuilder_.dispose();
            topCategoryNodesBuilder_ = null;
            topCategoryNodes_ = other.topCategoryNodes_;
            bitField0_ = (bitField0_ & ~0x00000001);
            topCategoryNodesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTopCategoryNodesFieldBuilder() : null;
          } else {
            topCategoryNodesBuilder_.addAllMessages(other.topCategoryNodes_);
          }
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.prodrink.catalog.generated.dto.CategoryTree parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.prodrink.catalog.generated.dto.CategoryTree) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<io.prodrink.catalog.generated.dto.CategoryNode> topCategoryNodes_ =
      java.util.Collections.emptyList();
    private void ensureTopCategoryNodesIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        topCategoryNodes_ = new java.util.ArrayList<io.prodrink.catalog.generated.dto.CategoryNode>(topCategoryNodes_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.prodrink.catalog.generated.dto.CategoryNode, io.prodrink.catalog.generated.dto.CategoryNode.Builder, io.prodrink.catalog.generated.dto.CategoryNodeOrBuilder> topCategoryNodesBuilder_;

    /**
     * <code>repeated .catalog.CategoryNode top_category_nodes = 1;</code>
     */
    public java.util.List<io.prodrink.catalog.generated.dto.CategoryNode> getTopCategoryNodesList() {
      if (topCategoryNodesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(topCategoryNodes_);
      } else {
        return topCategoryNodesBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .catalog.CategoryNode top_category_nodes = 1;</code>
     */
    public int getTopCategoryNodesCount() {
      if (topCategoryNodesBuilder_ == null) {
        return topCategoryNodes_.size();
      } else {
        return topCategoryNodesBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .catalog.CategoryNode top_category_nodes = 1;</code>
     */
    public io.prodrink.catalog.generated.dto.CategoryNode getTopCategoryNodes(int index) {
      if (topCategoryNodesBuilder_ == null) {
        return topCategoryNodes_.get(index);
      } else {
        return topCategoryNodesBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .catalog.CategoryNode top_category_nodes = 1;</code>
     */
    public Builder setTopCategoryNodes(
        int index, io.prodrink.catalog.generated.dto.CategoryNode value) {
      if (topCategoryNodesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTopCategoryNodesIsMutable();
        topCategoryNodes_.set(index, value);
        onChanged();
      } else {
        topCategoryNodesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .catalog.CategoryNode top_category_nodes = 1;</code>
     */
    public Builder setTopCategoryNodes(
        int index, io.prodrink.catalog.generated.dto.CategoryNode.Builder builderForValue) {
      if (topCategoryNodesBuilder_ == null) {
        ensureTopCategoryNodesIsMutable();
        topCategoryNodes_.set(index, builderForValue.build());
        onChanged();
      } else {
        topCategoryNodesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .catalog.CategoryNode top_category_nodes = 1;</code>
     */
    public Builder addTopCategoryNodes(io.prodrink.catalog.generated.dto.CategoryNode value) {
      if (topCategoryNodesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTopCategoryNodesIsMutable();
        topCategoryNodes_.add(value);
        onChanged();
      } else {
        topCategoryNodesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .catalog.CategoryNode top_category_nodes = 1;</code>
     */
    public Builder addTopCategoryNodes(
        int index, io.prodrink.catalog.generated.dto.CategoryNode value) {
      if (topCategoryNodesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTopCategoryNodesIsMutable();
        topCategoryNodes_.add(index, value);
        onChanged();
      } else {
        topCategoryNodesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .catalog.CategoryNode top_category_nodes = 1;</code>
     */
    public Builder addTopCategoryNodes(
        io.prodrink.catalog.generated.dto.CategoryNode.Builder builderForValue) {
      if (topCategoryNodesBuilder_ == null) {
        ensureTopCategoryNodesIsMutable();
        topCategoryNodes_.add(builderForValue.build());
        onChanged();
      } else {
        topCategoryNodesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .catalog.CategoryNode top_category_nodes = 1;</code>
     */
    public Builder addTopCategoryNodes(
        int index, io.prodrink.catalog.generated.dto.CategoryNode.Builder builderForValue) {
      if (topCategoryNodesBuilder_ == null) {
        ensureTopCategoryNodesIsMutable();
        topCategoryNodes_.add(index, builderForValue.build());
        onChanged();
      } else {
        topCategoryNodesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .catalog.CategoryNode top_category_nodes = 1;</code>
     */
    public Builder addAllTopCategoryNodes(
        java.lang.Iterable<? extends io.prodrink.catalog.generated.dto.CategoryNode> values) {
      if (topCategoryNodesBuilder_ == null) {
        ensureTopCategoryNodesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, topCategoryNodes_);
        onChanged();
      } else {
        topCategoryNodesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .catalog.CategoryNode top_category_nodes = 1;</code>
     */
    public Builder clearTopCategoryNodes() {
      if (topCategoryNodesBuilder_ == null) {
        topCategoryNodes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        topCategoryNodesBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .catalog.CategoryNode top_category_nodes = 1;</code>
     */
    public Builder removeTopCategoryNodes(int index) {
      if (topCategoryNodesBuilder_ == null) {
        ensureTopCategoryNodesIsMutable();
        topCategoryNodes_.remove(index);
        onChanged();
      } else {
        topCategoryNodesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .catalog.CategoryNode top_category_nodes = 1;</code>
     */
    public io.prodrink.catalog.generated.dto.CategoryNode.Builder getTopCategoryNodesBuilder(
        int index) {
      return getTopCategoryNodesFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .catalog.CategoryNode top_category_nodes = 1;</code>
     */
    public io.prodrink.catalog.generated.dto.CategoryNodeOrBuilder getTopCategoryNodesOrBuilder(
        int index) {
      if (topCategoryNodesBuilder_ == null) {
        return topCategoryNodes_.get(index);  } else {
        return topCategoryNodesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .catalog.CategoryNode top_category_nodes = 1;</code>
     */
    public java.util.List<? extends io.prodrink.catalog.generated.dto.CategoryNodeOrBuilder> 
         getTopCategoryNodesOrBuilderList() {
      if (topCategoryNodesBuilder_ != null) {
        return topCategoryNodesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(topCategoryNodes_);
      }
    }
    /**
     * <code>repeated .catalog.CategoryNode top_category_nodes = 1;</code>
     */
    public io.prodrink.catalog.generated.dto.CategoryNode.Builder addTopCategoryNodesBuilder() {
      return getTopCategoryNodesFieldBuilder().addBuilder(
          io.prodrink.catalog.generated.dto.CategoryNode.getDefaultInstance());
    }
    /**
     * <code>repeated .catalog.CategoryNode top_category_nodes = 1;</code>
     */
    public io.prodrink.catalog.generated.dto.CategoryNode.Builder addTopCategoryNodesBuilder(
        int index) {
      return getTopCategoryNodesFieldBuilder().addBuilder(
          index, io.prodrink.catalog.generated.dto.CategoryNode.getDefaultInstance());
    }
    /**
     * <code>repeated .catalog.CategoryNode top_category_nodes = 1;</code>
     */
    public java.util.List<io.prodrink.catalog.generated.dto.CategoryNode.Builder> 
         getTopCategoryNodesBuilderList() {
      return getTopCategoryNodesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.prodrink.catalog.generated.dto.CategoryNode, io.prodrink.catalog.generated.dto.CategoryNode.Builder, io.prodrink.catalog.generated.dto.CategoryNodeOrBuilder> 
        getTopCategoryNodesFieldBuilder() {
      if (topCategoryNodesBuilder_ == null) {
        topCategoryNodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.prodrink.catalog.generated.dto.CategoryNode, io.prodrink.catalog.generated.dto.CategoryNode.Builder, io.prodrink.catalog.generated.dto.CategoryNodeOrBuilder>(
                topCategoryNodes_,
                ((bitField0_ & 0x00000001) == 0x00000001),
                getParentForChildren(),
                isClean());
        topCategoryNodes_ = null;
      }
      return topCategoryNodesBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:catalog.CategoryTree)
  }

  // @@protoc_insertion_point(class_scope:catalog.CategoryTree)
  private static final io.prodrink.catalog.generated.dto.CategoryTree DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.prodrink.catalog.generated.dto.CategoryTree();
  }

  public static io.prodrink.catalog.generated.dto.CategoryTree getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CategoryTree>
      PARSER = new com.google.protobuf.AbstractParser<CategoryTree>() {
    public CategoryTree parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new CategoryTree(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<CategoryTree> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CategoryTree> getParserForType() {
    return PARSER;
  }

  public io.prodrink.catalog.generated.dto.CategoryTree getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

